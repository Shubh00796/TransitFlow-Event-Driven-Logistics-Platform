spring.profiles.active=docker

spring.application.name=transitflow-inventory
server.port=8082

spring.datasource.url=jdbc:mysql://mysql-db:3306/blogapplication?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USER:root}
spring.datasource.password=${DB_PASS:007796}
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1800000

# ??? JPA / Hibernate ???
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ??? Kafka ???
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=inventory-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.transistflow.commans.events

# (If you publish via outbox too)
spring.kafka.producer.transaction-id-prefix=inventory-tx-
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# ??? JPA Transaction (for ChainedTransactionManager) ???
# spring.jta.enabled=false

# ??? Multipart, Bean overriding ???
spring.servlet.multipart.enabled=true
spring.main.allow-bean-definition-overriding=true

# ??? Logging ???
logging.level.com.transistflow=DEBUG
