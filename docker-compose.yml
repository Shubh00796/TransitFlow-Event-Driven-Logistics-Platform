services:
  # ─── MySQL ────────────────────────────────────────────────────────────────
  mysql-db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: blogapplication
      MYSQL_ROOT_PASSWORD: 007796
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 20

  # ─── Zookeeper ────────────────────────────────────────────────────────────
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0   # match Kafka version!
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ─── Kafka ────────────────────────────────────────────────────────────────
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka 9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10



  # ─── Kafka UI ─────────────────────────────────────────────────────────────
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  # ─── Order Service ────────────────────────────────────────────────────────
  order-service:
    build:
      context: ./transitflow-order
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mysql-db:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker,kafka
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/blogapplication?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 007796
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # ─── Inventory Service ────────────────────────────────────────────────────
  inventory-service:
    build:
      context: ./transitflow-inventory
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mysql-db:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker,kafka
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/blogapplication?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 007796
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # ─── Dispatch Service ─────────────────────────────────────────────────────
  dispatch-service:
    build:
      context: ./transitflow-dispatch
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mysql-db:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker,kafka
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/blogapplication?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 007796
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  # ─── Delivery Service ─────────────────────────────────────────────────────
  delivery-service:
    build:
      context: ./transitflow-delivery
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mysql-db:
        condition: service_healthy
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker,kafka
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/blogapplication?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 007796
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
